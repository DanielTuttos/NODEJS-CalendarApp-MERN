{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/authAction.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/uiAction.js","helpers/prepareEvents.js","actions/eventsAction.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","user","logout","checkingFinish","eventLogout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginvalues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegistervalues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","customStyles","content","top","left","right","bottom","marginRight","transform","now","minutes","seconds","add","nowPlus1","clone","Modal","setAppElement","initEvent","notes","CalendarModal","setDateStart","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","startEventAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10f86c86.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[UI] Open Modal',\r\n    uiCloseModal: '[UI] Close Modal',\r\n\r\n    eventSetActive: '[EVENT] Set Active',\r\n    eventLogout: '[EVENT] Event Logout',\r\n\r\n    eventStartAddNew: '[EVENT] Start Add New',\r\n    eventAddNew: '[EVENT] Add New',\r\n    eventClearActiveEvent: '[EVENT] Clear Active Event',\r\n    eventUpdated: '[EVENT] Event Updated',\r\n    eventDeleted: '[EVENT] Event Deleted',\r\n    eventLoaded: '[EVENT] Events loaded',\r\n\r\n    \r\n    authCheckingFinish: '[AUTH] Finish Checking Login State',\r\n    authStartLogin: '[AUTH] Start Login',\r\n    authLogin: '[AUTH] Login',\r\n    authStartRegister: '[AUTH] Start Register',\r\n    authStartTokenRenew: '[AUTH] Start Token Renew',\r\n    authLogout: '[AUTH] Logout',\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const iuReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleanios del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'comprar el pastel',\r\n//     user: {\r\n//         _id: '12312212312',\r\n//         name: 'Daniel'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [\r\n    ],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e => (e.id === action.payload.id) ? action.payload : e)\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => e.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid:null,\r\n    // name:null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { iuReducer } from \"./uiReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { authReducer } from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: iuReducer,\r\n    // TODO: AuthReducer\r\n    calendar: calendarReducer,\r\n\r\n    auth:authReducer\r\n})","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n     if (method === 'GET') {\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            // console.log(body);\r\n            Swal.fire(\"Error\", body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            // console.log(body);\r\n            Swal.fire(\"Error\", body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            // console.log(body);\r\n            // Swal.fire(\"Error\", body.msg, 'error');\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [\r\n        values,\r\n        handleInputChange,\r\n        reset\r\n    ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/authAction';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginvalues, handleLoginInputChange] = useForm({\r\n        lEmail: 'daniel@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n    const { lEmail, lPassword } = formLoginvalues;\r\n\r\n    const [formRegistervalues, handleRegisterInputChange] = useForm({\r\n        rName: \"Jonathan\",\r\n        rEmail: 'jonaee@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegistervalues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='rPassword1'\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name='rPassword2'\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/authAction';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\" >\r\n                {name}\r\n            </span>\r\n\r\n            <button className='btn btn-outline-danger'\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events=[])=>{\r\n    return events.map(event=>({\r\n        ...event,\r\n        end: moment(event.end).toDate(),\r\n        start: moment(event.start).toDate()\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startEventAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            // console.log(event);\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            // console.log(body);\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                console.log(event);\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event))\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted())\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStarLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Modal from 'react-modal';\r\nimport moment from 'moment';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { uiCloseModal } from '../../actions/uiAction';\r\nimport { eventClearActiveEvent, eventStartUpdate, startEventAddNew } from '../../actions/eventsAction';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(startEventAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n\r\n        closeModal();\r\n\r\n        // console.log(dateStart, dateEnd);\r\n\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n            <h1>{(activeEvent) ? 'Editar Evento' : 'Nuevo evento'}</h1>\r\n            <hr />\r\n            <form\r\n                onSubmit={handleSubmitForm}\r\n                className=\"container\"\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleStartDateChange}\r\n                        value={start}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleEndDateChange}\r\n                        minDate={start}\r\n                        value={end}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/uiAction';\r\nimport { eventClearActiveEvent } from '../../actions/eventsAction';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddClick = () => {\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            onClick={handleAddClick}\r\n            className=\"btn btn-primary fab\"\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/eventsAction';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\n\r\nimport { uiOpenModal } from '../../actions/uiAction';\r\nimport { eventSetActive, eventClearActiveEvent, eventStarLoading } from '../../actions/eventsAction';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStarLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e);\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        // console.log(event, start, end, isSelected);\r\n        // console.log(event);\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#357cf7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {activeEvent && <DeleteEventFab />}\r\n\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to='/login' />)\r\n            )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to='/' />)\r\n            )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/authAction';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isLoggedIn={!!uid} //negacion del string vacio la doble negacion interesante\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isLoggedIn={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CalendarApp } from './CalendarApp';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n\r\n  <CalendarApp />,\r\n\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}